{"version":3,"sources":["components/Counter/index.js","components/TodoForm/index.js","components/ListItems/index.js","containers/App/app.js","index.js"],"names":["Counter","props","counter","onClick","handleIncrement","className","handleDecrement","TodoForm","for","onChange","handleInputChange","value","todoInput","id","handleSubmit","ListItems","items","map","item","index","key","App","state","todos","setState","event","target","preventDefault","this","Component","ReactDOM","render","document","getElementById"],"mappings":"qLAyBeA,EAtBC,SAAAC,GACd,OACE,6BAEE,2BAAIA,EAAMC,SAEV,4BACEC,QAASF,EAAMG,gBACfC,UAAU,mBAFZ,aAMA,4BACEF,QAASF,EAAMK,gBACfD,UAAU,mBAFZ,eCWSE,EAxBE,SAAAN,GAAK,OACpB,8BACE,yBAAKI,UAAU,cACb,2BAAOG,IAAI,YAAX,SAGA,2BACEC,SAAUR,EAAMS,kBAChBC,MAAOV,EAAMW,UACbP,UAAU,eACVQ,GAAG,cAKP,4BACER,UAAU,kBACVF,QAASF,EAAMa,cAFjB,YCFWC,EAbG,SAAAd,GAAK,OACrB,wBAAII,UAAU,cAEXJ,EAAMe,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACf,wBACEd,UAAU,kBACVe,IAAKD,GAAQD,QCgENG,E,4MA/DbC,MAAQ,CACNpB,QAAS,EACTqB,MAAO,CAAC,aAAc,YAAa,eACnCX,UAAW,I,EAIbR,gBAAkB,WAChB,EAAKoB,SAAS,CAAEtB,QAAS,EAAKoB,MAAMpB,QAAU,K,EAEhDI,gBAAkB,WAChB,EAAKkB,SAAS,CAAEtB,QAAS,EAAKoB,MAAMpB,QAAU,K,EAIhDQ,kBAAoB,SAAAe,GAAS,IAGnBd,EAAUc,EAAMC,OAAhBf,MACR,EAAKa,SAAS,CAAEZ,UAAWD,K,EAI7BG,aAAe,SAAAW,GACbA,EAAME,iBAEN,IAAMJ,EAAK,sBAAO,EAAKD,MAAMC,OAAlB,CAAyB,EAAKD,MAAMV,YAE/C,EAAKY,SAAS,CAAED,QAAOX,UAAW,M,uDAMlC,OACE,yBAAKP,UAAU,aAGb,kBAAC,EAAD,CACEH,QAAS0B,KAAKN,MAAMpB,QACpBE,gBAAiBwB,KAAKxB,gBACtBE,gBAAiBsB,KAAKtB,kBAIxB,kBAAC,EAAD,CACEI,kBAAmBkB,KAAKlB,kBACxBI,aAAcc,KAAKd,aACnBF,UAAWgB,KAAKN,MAAMV,YAIxB,kBAAC,EAAD,CACEI,MAAOY,KAAKN,MAAMC,a,GAxDVM,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.7d2293bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Replace this.state with props\r\nconst Counter = props => {\r\n  return (\r\n    <div>\r\n\r\n      <p>{props.counter}</p>\r\n\r\n      <button\r\n        onClick={props.handleIncrement}\r\n        className=\"btn btn-primary\">\r\n        Increment\r\n      </button>\r\n\r\n      <button\r\n        onClick={props.handleDecrement}\r\n        className=\"btn btn-primary\">\r\n        Decrement\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\nconst TodoForm = props => (\r\n  <form>\r\n    <div className=\"form-group\">\r\n      <label for=\"todoList\">Todos</label>\r\n\r\n      {/* Links todoInput array, and allows text in the box to change */}\r\n      <input\r\n        onChange={props.handleInputChange}\r\n        value={props.todoInput}\r\n        className=\"form-control\"\r\n        id=\"todoList\"\r\n      />\r\n    </div>\r\n\r\n    {/* Submit button */}\r\n    <button\r\n      className=\"btn btn-primary\"\r\n      onClick={props.handleSubmit}>\r\n      Submit\r\n    </button>\r\n\r\n  </form>\r\n);\r\n\r\nexport default TodoForm;","import React from 'react';\r\n\r\nconst ListItems = props => (\r\n  <ul className=\"list-group\">\r\n\r\n    {props.items.map((item, index) => (\r\n      <li\r\n        className=\"list-group-item\"\r\n        key={index}>{item}\r\n      </li>\r\n    ))}\r\n\r\n  </ul>\r\n);\r\n\r\nexport default ListItems;","import React, { Component } from 'react';\r\nimport Counter from './../../components/Counter'\r\nimport TodoForm from './../../components/TodoForm'\r\nimport ListItems from './../../components/ListItems'\r\n// You don't need to add the js file name if it's index.js\r\n\r\nclass App extends Component {\r\n  // Items that change dynamically based off code below\r\n  // Cannot make single variables outside of a state array, it has to be named STATE\r\n  state = {\r\n    counter: 0,\r\n    todos: ['Do laundry', 'Feed cats', 'Wash dishes'],\r\n    todoInput: \"\"\r\n  };\r\n\r\n  // Increase and decrease onClick functions\r\n  handleIncrement = () => {\r\n    this.setState({ counter: this.state.counter + 1 });\r\n  };\r\n  handleDecrement = () => {\r\n    this.setState({ counter: this.state.counter - 1 });\r\n  };\r\n\r\n  // Allows todoInput to be changed on the form, without this you can't type in text box\r\n  handleInputChange = event => {\r\n    // const value = event.target.value\r\n    // const { target: { value } } = event\r\n    const { value } = event.target;\r\n    this.setState({ todoInput: value });\r\n  };\r\n\r\n  // Prevents page refresh on Submit click\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // Adds a new item to todos\r\n    const todos = [...this.state.todos, this.state.todoInput];\r\n    // Resets input text to empty, after submit\r\n    this.setState({ todos, todoInput: \"\" });\r\n  };\r\n\r\n  // Renders the HTML you see\r\n  // Have to run console.log before return, or you won't see it\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n\r\n        {/* Shows the current count number on page, and its buttons */}\r\n        <Counter\r\n          counter={this.state.counter}\r\n          handleIncrement={this.handleIncrement}\r\n          handleDecrement={this.handleDecrement}\r\n        />\r\n\r\n        {/* Shows the todo form info */}\r\n        <TodoForm\r\n          handleInputChange={this.handleInputChange}\r\n          handleSubmit={this.handleSubmit}\r\n          todoInput={this.state.todoInput}\r\n        />\r\n\r\n        {/* List of todo items, shown on page */}\r\n        <ListItems\r\n          items={this.state.todos}\r\n        />\r\n\r\n      </div>\r\n    );\r\n\r\n    // Closing Render and App tags\r\n  };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App/app.js'\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}